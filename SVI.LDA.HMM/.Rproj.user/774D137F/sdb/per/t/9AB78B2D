{
    "collab_server" : "",
    "contents" : "# LDA.SVI<-function(X, # the Input data\n#                   K, # the number of the topics\n#                   n, # the number of the passes\n#                   alpha, # the parameter of theta\n#                   eta, # the parameter of beta\n#                   pre, # the stop criteria\n#                   topic_length# the number of top words and topics\n#\n# )\n# {\n#        library(Rcpp)\n#        library(RcppArmadillo)\n#        sourceCpp(file='src/LDA.cpp')\n#        t=  SVI_LDA(X,K,n,alpha,eta,pre,topic_length)\n#        names(t)=c(\"Lan\",\"LSS\",\"LL\",\"SSS\",\"SSSSSS\")\n#        return(t)\n# }\n#\n# Tokenize<-function(Data_set, # the Input original data, which is a list data type\n#                    Language = \"en\"# the language type you want to produce, defaut language is en\n#                    )\n# {\n#      library(tokenizers);\n#      tokenized_data <-tokenize_words(Data_set, stopwords = stopwords(Language));\n#      return(tokenized_data);\n# }\n# Stemming <- function(Tokenized_data)\n# {\n#   library(tokenizers);\n#    Document_num = length(Tokenized_data);\n#    Stem_data <- list(Document_num);\n#    for( i in 1:length(Tokenized_data))\n#    {\n#       Stem_data[[i]]=wordStem(unlist(Tokenized_data[i]));\n#    }\n#    return (Stem_data);\n# }\n#\n#  X=list(c('home','mother','mother','house','mother',rep(\"cat\",3)),c('father','dad','cat','dad','cat','cat','cat','cat','cat','cat'))\n# K=3;\n# alpha=1/K;\n# eta=0.01;\n# n=100;\n# pre=0.1;\n# t=LDA.SVI(X,K,n,alpha=1/K,eta=0.01,pre=0.01,topic_length= 3)\n# doc_a = \"Brocolli is good to eat. My brother likes to eat good brocolli, but not my mother.\"\n# doc_b = \"My mother spends a lot of time driving my brother around to baseball practice.\"\n# doc_c = \"Some health experts suggest that driving may cause increased tension and blood pressure.\"\n# doc_d = \"I often feel pressure to perform well at school, but my mother never seems to drive my brother to do better.\"\n# doc_e = \"Health professionals say that brocolli is good for your health.\"\n# data <- list(doc_a,doc_b,doc_c,doc_d,doc_e)\n      library(Rcpp)\n      library(RcppArmadillo)\nSVI.HMM <- function( Data_sequence, # Observed data\n                     sub_length , # subchain length\n                     K,             #Hidden_state_number\n                     W_A,         # initial parameter,which controls transition matrix\n                     u,            # initial mean value\n                     k,            # initial parameter, which controls Gassuian Distribution\n                     sigma,        # initial covariance matrix\n                     v,             # initial parameter, which controls Gassuian Distribution\n                     U_A,    # Hyperparameter\n                     U_phi1, # Hyperparameter\n                     U_phi2, # Hyperperameter the same notation with the paper\n                     U_phi3, # Hyperperameter the same notation with the paper\n                     U_phi4, # Hyperperameter the same notation with the paper\n                     Pass,    # toal pass\n                     pre\n)\n{\n  Dim=length(Data_sequence[[1]])  # data_dimention\n  sourceCpp(file='src/HMM.cpp')\n  result= SVI_HMM(Data_sequence,sub_length,K,W_A,u,k,sigma,v,U_A,U_phi1,U_phi2,U_phi3,U_phi4,Dim,Pass,pre)\n  return(result)\n}\ndata <-list(c(1.8,2.0),c(1,2),c(1.1,1.6),c(1.7,1.7),c(1,2),c(1.1,1.6),c(1,2),c(1.1,1.6),c(1.7,1.7),c(1,2),c(1.1,1.6),c(2,4),c(3,3))\nK=2\nDim=length(data[[1]])# Gassiuan Component Number\nalpha=1/K        #\nu0 = 1:Dim # initial mean value\nk0=1             # initial parameter\nv0=6             # initial parameter\nsigma0 = diag(rep(1,2)) # initial covariance with identity matrix\nU_A = matrix(rep(1/K,K*K),K)        # Hyperperameter the same notation with the paper\nU_phi1 = matrix(rep(0,Dim*K),Dim) # Hyperperameter the same notation with the paper\nfor(i in 1:K)\n{\n  U_phi1[,i]=2*k0*u0;\n}\nU_phi2 = rep(2*k0,K)    # Hyperperameter the same notation with the paper\nU_phi3 = list(K)\nfor(i in 1:K)\n{\n  U_phi3[[i]]=  sigma0+2*k0*u0%*%t(u0);           # initial every component with the same covariance\n}\nU_phi4 = rep(v0+2+2,K)  # Hyperperameter the same notation with the paper\nsub_length = 5   # sample chain length  # data_dimention\nu = matrix(rep(0,Dim*K),Dim) ;  # claim mean value of K components.\nk = 1:K;                  # claim k, which controls Gussuian Distribution\nv = (3+Dim):(2+Dim+K);                  # claim v, which controls Gussuian Distribution\nfor( i in 1:K)\n{\n  u[,i]=i*u0;                    # initial every component with the same mean value\n}\nsigma = list(K)\nfor(i in 1:K)\n{\n  sigma[[i]]= i*sigma0;         # initial every component with the same covariance\n}\nW_A = matrix(1:(K*K),K);\nresult = SVI.HMM(data,sub_length =13,K=2,W_A, u, k, sigma, v, U_A, U_phi1,U_phi2, U_phi3, U_phi4, Pass=100, pre=0.01)\n",
    "created" : 1503240756880.000,
    "dirty" : false,
    "encoding" : "UTF-8",
    "folds" : "",
    "hash" : "3407401357",
    "id" : "9AB78B2D",
    "lastKnownWriteTime" : 1503261488,
    "last_content_update" : -2147483648,
    "path" : "D:/Rproject/SVI.LDA.HMM/R/SVI_LDA.R",
    "project_path" : "R/SVI_LDA.R",
    "properties" : {
        "docOutlineSize" : "393.6486356241349",
        "docOutlineVisible" : "0"
    },
    "relative_order" : 2,
    "source_on_save" : false,
    "source_window" : "",
    "type" : "r_source"
}